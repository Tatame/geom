#include <stdio.h>
#include <stdlib.h>
#define null 0.00000000000

int main(){
    int m=0, n=0, flag=0, h=0;
    scanf("%d %d", &m, &n);
    double** a=(double**)malloc(m*sizeof(double*));
    for (int i=0; i<m; i++){
        a[i]=(double*)malloc(n*sizeof(double));
    }
    for (int i=0; i<m; i++){
        for (int j=0; j<n; j++){
            scanf("%lf",&a[i][j]);
        }
    }
    double x=0, r=0;
    if (m<=n) flag=1;
    //перестановка
    for (int i=0; i<m; i++){ 
        for (int j=i; j<m; j++){
            if ((a[j][i]!=null)&&(j!=i)){
                for (int h=0; h<n; h++){
                    r=a[j][h]; a[j][h]=a[i][h]; a[i][h]=r;
                }
                break;
            }
            if ((a[j][i]!=null)&&(j==i)) break;
        }
    } 
    //приводим к ступенчатому виду
    if (flag==1){
        for (int i=0; i<m; i++){
            if (a[i][i]!=null){
                for (int j=i+1; j<m;j++){
                    x=a[j][i]/a[i][i];
                    for (int l=0; l<n; l++){
                        a[j][l]=a[j][l]-x*a[i][l];
                    }
                }
            }
        }
        for (int i=m-1; i>0; i--){
            if (a[i][i]!=null){
                for (int j=i-1; j>=0;j--){
                    x=a[j][i]/a[i][i];
                    for (int l=0; l<n; l++){
                        a[j][l]=a[j][l]-x*a[i][l];
                    }
                }
            }
        }
    }
    else {
        for (int i=0; i<n; i++){
            if (a[i][i]!=null){
                for (int j=i+1; j<m;j++){
                    x=a[j][i]/a[i][i];
                    for (int l=i; l<n; l++){
                        a[j][l]=a[j][l]-x*a[i][l];
                    }
                }
            }
        }
        for (int i=n-1; i>0; i--){
            if (a[i][i]!=null){
                for (int j=i-1; j>=0;j--){
                    x=a[j][i]/a[i][i];
                    for (int l=0; l<n; l++){
                        a[j][l]=a[j][l]-x*a[i][l];
                    }
                }
            }
        }
    }
    int kol=0;
    //нулевые строки в конец
    for (int i=0; i<m; i++){
        for (int j=0; j<n; j++){
            if (a[i][j]!=null){
                kol+=1;
            }
        }
        if (kol==0){
            for (int h=i; h<m-1; h++){
                for (int l=0; l<n; l++){
                    a[h][l]=a[h+1][l];
                    a[h+1][l]=0;
                }
            }
        }
        kol=0;
    }
    //задаем массивы зависимых и свободных переменных и ответов
    int *b=(int*)malloc(n*sizeof(int));
    for (int i=0; i<n; i++) b[i]=0;
    double *ix=(double*)malloc(n*sizeof(double));
    for (int i=0; i<n; i++) ix[i]=0;
    int niz=0;
    kol=0;
    //ищем нижнюю ненулевую строку
    for (int i=m-1;i>=0;i--){
        for (int j=0; j<n; j++){
            if (a[i][j]!=null){
                niz=i;
                break;
            }
        }
        if (niz!=0) break;
    }
    //printf("%d\n",niz);
    int sum=0;
    //ищем зависимые переменные
    for (int i=niz; i>=0; i--){
        for (int j=0; j<n; j++){
            if (a[i][j]!=null){
                b[j]+=1;
                sum+=1;
                break;
            }
        }
    }
    int in=1;
    printf("Fundamental system of solutions\n");
    if (sum==n) {
        printf("1) ");
        for (int i=0; i<n; i++){
            printf("%lf ",0/a[i][i]);
        }
        return 0;
    }
    //Ищем ответ, подставляя вместо одной из свободных переменных 1
    for (int i=0; i<n; i++){
        if (b[i]==0){
            ix[i]=1;
            for (int j=niz; j>=0; j--){
                for (int l=0; l<n; l++){
                    if (a[j][l]!=null){
                        
                        for (int h=l+1; h<n; h++){
                            ix[l]+=ix[h]*a[j][h]*(-1);
                        }
                        ix[l]=ix[l]/a[j][l];
                    }
                    if (a[j][l]!=null) break;
                }
            }
            printf("%d) ",in);
            in+=1;
            for (int k=0; k<n; k++){
                printf("%lf ",ix[k]);
            }
            printf("\n");
            for (int q=0; q<n; q++) ix[q]=0;
        }
    }
    printf("\n");
    /*for (int i=0; i<m; i++){
        for (int j=0; j<n; j++){
            printf("%lf ",a[i][j]);
        }
        printf("\n");
    }
    for (int i=0; i<n; i++){
        printf("%d ", b[i]);
    }*/
    
    return 0;
}
